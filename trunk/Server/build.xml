<project name="BriscolaServer" default="dist" basedir=".">

  <description>
        simple example build file
    </description>
  <!-- set global properties for this build -->
  <property name="src" location="src"/>
  <property name="build" location="build"/>
  <property name="dist"  location="dist"/>
  <property name="reports" location="reports"/>
  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
  </target>

  <target name="compile" depends="init"
        description="compile the source " >
    <!-- Compile the java code from ${src} into ${build} -->
    <javac srcdir="${src}" destdir="${build}"/>
  </target>

  <target name="dist" depends="compile"
        description="generate the distribution" >
    <!-- Create the distribution directory -->
    <mkdir dir="${dist}/lib"/>

    <!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
    <jar jarfile="${dist}/lib/BriscolaServer.jar" basedir="${build}">
      <manifest>
        <attribute name="Main-Class" value="org.briscola.server.Main" />
        <attribute name="Class-Path" value="mysql-connector-java-5.1.13-bin.jar" />
      </manifest>
    </jar>
  </target>

  <target name="clean"
        description="clean up" >
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>
  <target name="javadocs" depends="dist" description="generates javadoc and also UML Diagram">
    <mkdir dir="${reports}/javadoc"/>

    <javadoc sourcepath="${src}" packagenames="org.briscola.server" destdir="${reports}/javadoc" >
      <fileset dir="${src}" defaultexcludes="yes">
            <include name="**/*.java"/>
        </fileset>
      <doclet name="org.umlgraph.doclet.UmlGraphDoc"

      path="/home/tiziano/Downloads/UMLGraph-5.3/lib/UmlGraph.jar">

      <param name="-attributes" />

      <param name="-operations" />

      <param name="-qualify" />

      <param name="-types" />

      <param name="-visibility" />
      <param name="-inferdep" />
      <param name="-inferrel" />

      </doclet>

    </javadoc>

    <apply executable="dot" dest="${reports}" parallel="false">

    <arg value="-Tpng"/>

    <arg value="-o"/>

    <targetfile/>

    <srcfile/>

    <fileset dir="${reports}" includes="*.dot"/>

    <mapper type="glob" from="*.dot" to="*.png"/>

    </apply>

</target>
</project>


